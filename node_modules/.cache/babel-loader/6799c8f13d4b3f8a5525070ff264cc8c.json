{"ast":null,"code":"var _jsxFileName = \"/home/fazal/Documents/claudius/D3-charts/src/BollingerBands.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { lab } from 'd3';\n\nconst moment = require('moment');\n\nconst BollingerBands = props => {\n  useEffect(() => {\n    drawChart();\n  });\n\n  function drawChart() {\n    var height = 600;\n    var width = 900;\n    var margin = {\n      top: 10,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n    const svg = d3.select('body').append('svg').attr(\"width\", width).attr(\"height\", height).style(\"overflow\", \"visible\");\n    svg.append(\"g\").call(xAxis);\n    svg.append(\"g\").call(yAxis);\n    svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke-width\", 1.5).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").selectAll(\"path\").data([values, ...bollinger(values, N, [-K, 0, +K])]).join(\"path\").attr(\"stroke\", (d, i) => [\"#aaa\", \"green\", \"blue\", \"red\"][i]).attr(\"d\", line);\n\n    function bollinger(values, N, K) {\n      let i = 0;\n      let sum = 0;\n      let sum2 = 0;\n      const bands = K.map(() => new Float64Array(values.length).fill(NaN));\n\n      for (let n = Math.min(N - 1, values.length); i < n; ++i) {\n        const value = values[i];\n        sum += value, sum2 += value ** 2;\n      }\n\n      for (let n = values.length, m = bands.length; i < n; ++i) {\n        const value = values[i];\n        sum += value, sum2 += value ** 2;\n        const mean = sum / N;\n        const deviation = Math.sqrt((sum2 - sum ** 2 / N) / (N - 1));\n\n        for (let j = 0; j < K.length; ++j) {\n          bands[j][i] = mean + deviation * K[j];\n        }\n\n        const value0 = values[i - N + 1];\n        sum -= value0, sum2 -= value0 ** 2;\n      }\n\n      return bands;\n    }\n  }\n\n  const d3Container = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d3-lollipop-chart\",\n    width: 996,\n    height: 444,\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default BollingerBands;","map":{"version":3,"sources":["/home/fazal/Documents/claudius/D3-charts/src/BollingerBands.js"],"names":["React","useRef","useEffect","d3","lab","moment","require","BollingerBands","props","drawChart","height","width","margin","top","right","bottom","left","svg","select","append","attr","style","call","xAxis","yAxis","selectAll","data","values","bollinger","N","K","join","d","i","line","sum","sum2","bands","map","Float64Array","length","fill","NaN","n","Math","min","value","m","mean","deviation","sqrt","j","value0","d3Container"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { lab } from 'd3';\nconst moment = require('moment');\n\n\nconst BollingerBands = (props) => {\n    useEffect(() => {\n        drawChart();\n    });\n\n    function drawChart() {\n\n        var height = 600;\n        var width = 900;\n        var margin = ({top: 10, right: 20, bottom: 30, left: 40})\n\n            const svg = d3.select('body').append('svg')\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .style(\"overflow\", \"visible\");\n          \n            svg.append(\"g\")\n                .call(xAxis);\n          \n            svg.append(\"g\")\n                .call(yAxis);\n          \n            svg.append(\"g\")\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-linecap\", \"round\")\n              .selectAll(\"path\")\n              .data([values, ...bollinger(values, N, [-K, 0, +K])])\n              .join(\"path\")\n                .attr(\"stroke\", (d, i) => [\"#aaa\", \"green\", \"blue\", \"red\"][i])\n                .attr(\"d\", line);\n        \n                \n                function bollinger(values, N, K) {\n                    let i = 0;\n                    let sum = 0;\n                    let sum2 = 0;\n                    const bands = K.map(() => new Float64Array(values.length).fill(NaN));\n                    for (let n = Math.min(N - 1, values.length); i < n; ++i) {\n                      const value = values[i];\n                      sum += value, sum2 += value ** 2;\n                    }\n                    for (let n = values.length, m = bands.length; i < n; ++i) {\n                      const value = values[i];\n                      sum += value, sum2 += value ** 2;\n                      const mean = sum / N;\n                      const deviation = Math.sqrt((sum2 - sum ** 2 / N) / (N - 1));\n                      for (let j = 0; j < K.length; ++j) {\n                        bands[j][i] = mean + deviation * K[j];\n                      }\n                      const value0 = values[i - N + 1];\n                      sum -= value0, sum2 -= value0 ** 2;\n                    }\n                    return bands;\n                  }\n\n\n    }\n\n    const d3Container = useRef(null);\n\n    return (\n        <div\n            className=\"d3-lollipop-chart\"\n            width={996}\n            height={444}\n            ref={d3Container}\n        ></div>\n    );\n}\n\nexport default BollingerBands;"]},"metadata":{},"sourceType":"module"}