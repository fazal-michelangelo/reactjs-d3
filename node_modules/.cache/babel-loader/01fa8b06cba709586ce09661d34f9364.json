{"ast":null,"code":"var _jsxFileName = \"/Users/fazal/reactjs-d3/src/SankeyChart.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport * as sankeychart from 'd3-sankey';\n\nconst moment = require('moment');\n\nconst SankeyChart = props => {\n  useEffect(() => {\n    drawChart();\n  });\n\n  function drawChart() {\n    const width = 975;\n    const height = 720;\n    const svg = d3.select(d3Container.current).append('svg').attr(\"viewBox\", `0 0 ${width} ${height}`).style(\"width\", width).style(\"height\", height); // const color = d3.scaleOrdinal([\"CONFIG_CHNGD\"], [\"#da4f81\"]).unknown(\"#ccc\")\n\n    const color = d3.scaleOrdinal().domain([\"New York\", \"San Francisco\", \"Austin\"]).range([\"#feebd1ff\", \"#3979daff\", \"#b8f4f8ff\", \"#7ac3f1ff\", \"#fae5a2ff\"]);\n    const sankey = sankeychart.sankey().nodeSort(null).linkSort(null).nodeWidth(4).nodePadding(20).extent([[0, 5], [width, height - 5]]); // d3.json(\"https://raw.githubusercontent.com/fazal-michelangelo/geojson/master/titanic.json\").then(data => {\n\n    d3.json(\"https://raw.githubusercontent.com/fazal-michelangelo/geojson/master/Daemon\").then(data => {\n      function chart() {\n        const {\n          nodes,\n          links\n        } = sankey({\n          nodes: data.nodes.map(d => Object.assign({}, d)),\n          links: data.links.map(d => Object.assign({}, d))\n        });\n        console.log(nodes);\n        svg.append(\"g\").selectAll(\"rect\").data(nodes).join(\"rect\").attr(\"x\", d => d.x0).attr(\"y\", d => d.y0).attr(\"height\", d => d.y1 - d.y0).attr(\"width\", d => d.x1 - d.x0).append(\"title\").text(d => `${d.name}\\n${d.value.toLocaleString()}`);\n        svg.append(\"g\").attr(\"fill\", \"none\").selectAll(\"g\").data(links).join(\"path\").attr(\"d\", sankeychart.sankeyLinkHorizontal()).attr(\"stroke\", d => color(d.names[0])).attr(\"stroke-width\", d => d.width).style(\"mix-blend-mode\", \"multiply\").append(\"title\").text(d => `${d.names.join(\" → \")}\\n${d.value.toLocaleString()}`);\n        svg.append(\"g\").style(\"font\", \"10px sans-serif\").selectAll(\"text\").data(nodes).join(\"text\").attr(\"x\", d => d.x0 < width / 2 ? d.x1 + 6 : d.x0 - 6).attr(\"y\", d => (d.y1 + d.y0) / 2).attr(\"dy\", \"0.35em\").attr(\"text-anchor\", d => d.x0 < width / 2 ? \"start\" : \"end\").text(d => d.name).append(\"tspan\").attr(\"fill-opacity\", 0.7).text(d => ` ${d.value.toLocaleString()}`);\n        return svg.node();\n      }\n\n      chart();\n    });\n  }\n\n  const d3Container = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dnif_line_area-chart\",\n    width: 996,\n    height: 444,\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default SankeyChart;","map":{"version":3,"sources":["/Users/fazal/reactjs-d3/src/SankeyChart.js"],"names":["React","useRef","useEffect","d3","sankeychart","moment","require","SankeyChart","props","drawChart","width","height","svg","select","d3Container","current","append","attr","style","color","scaleOrdinal","domain","range","sankey","nodeSort","linkSort","nodeWidth","nodePadding","extent","json","then","data","chart","nodes","links","map","d","Object","assign","console","log","selectAll","join","x0","y0","y1","x1","text","name","value","toLocaleString","sankeyLinkHorizontal","names","node"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport * as sankeychart from 'd3-sankey';\nconst moment = require('moment');\n\n\nconst SankeyChart = (props) => {\n    useEffect(() => {\n        drawChart();\n    });\n\n    function drawChart() {\n  \n        const width = 975;\n        const height = 720;\n\n        const svg = d3.select(d3Container.current).append('svg')\n            .attr(\"viewBox\", `0 0 ${width} ${height}`)\n            .style(\"width\", width)\n            .style(\"height\", height);\n\n\n        // const color = d3.scaleOrdinal([\"CONFIG_CHNGD\"], [\"#da4f81\"]).unknown(\"#ccc\")\n\n        const color = d3.scaleOrdinal()\n            .domain([\"New York\", \"San Francisco\", \"Austin\"])\n            .range([\"#feebd1ff\", \"#3979daff\" , \"#b8f4f8ff\", \"#7ac3f1ff\", \"#fae5a2ff\"]);\n\n        const sankey = sankeychart.sankey()\n            .nodeSort(null)\n            .linkSort(null)\n            .nodeWidth(4)\n            .nodePadding(20)\n            .extent([[0, 5], [width, height - 5]])\n\n        // d3.json(\"https://raw.githubusercontent.com/fazal-michelangelo/geojson/master/titanic.json\").then(data => {\n        d3.json(\"https://raw.githubusercontent.com/fazal-michelangelo/geojson/master/Daemon\").then(data => {\n\n            function chart() {\n\n                const { nodes, links } = sankey({\n                    nodes: data.nodes.map(d => Object.assign({}, d)),\n                    links: data.links.map(d => Object.assign({}, d))\n                });\n\n                console.log(nodes);\n                svg.append(\"g\")\n                    .selectAll(\"rect\")\n                    .data(nodes)\n                    .join(\"rect\")\n                    .attr(\"x\", d => d.x0)\n                    .attr(\"y\", d => d.y0)\n                    .attr(\"height\", d => d.y1 - d.y0)\n                    .attr(\"width\", d => d.x1 - d.x0)\n                    .append(\"title\")\n                    .text(d => `${d.name}\\n${d.value.toLocaleString()}`);\n\n                svg.append(\"g\")\n                    .attr(\"fill\", \"none\")\n                    .selectAll(\"g\")\n                    .data(links)\n                    .join(\"path\")\n                    .attr(\"d\", sankeychart.sankeyLinkHorizontal())\n                    .attr(\"stroke\", d => color(d.names[0]))\n                    .attr(\"stroke-width\", d => d.width)\n                    .style(\"mix-blend-mode\", \"multiply\")\n                    .append(\"title\")\n                    .text(d => `${d.names.join(\" → \")}\\n${d.value.toLocaleString()}`);\n\n                svg.append(\"g\")\n                    .style(\"font\", \"10px sans-serif\")\n                    .selectAll(\"text\")\n                    .data(nodes)\n                    .join(\"text\")\n                    .attr(\"x\", d => d.x0 < width / 2 ? d.x1 + 6 : d.x0 - 6)\n                    .attr(\"y\", d => (d.y1 + d.y0) / 2)\n                    .attr(\"dy\", \"0.35em\")\n                    .attr(\"text-anchor\", d => d.x0 < width / 2 ? \"start\" : \"end\")\n                    .text(d => d.name)\n                    .append(\"tspan\")\n                    .attr(\"fill-opacity\", 0.7)\n                    .text(d => ` ${d.value.toLocaleString()}`);\n\n                return svg.node();\n            }\n\n            chart();\n\n        });\n\n    }  \n\n    const d3Container = useRef(null);\n\n    return (\n        <div\n            className=\"dnif_line_area-chart\"\n            width={996}\n            height={444}\n            ref={d3Container}\n        ></div>\n    );\n}\n\nexport default SankeyChart;"]},"metadata":{},"sourceType":"module"}