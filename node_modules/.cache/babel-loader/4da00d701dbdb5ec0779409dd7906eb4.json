{"ast":null,"code":"(function () {\n  // self: plugin\n  // variable: object where configuration stored\n  var configHelper = function (self, variable) {\n    // use curry to store `self` and `variable`\n    return function (keyword) {\n      return function (x) {\n        if (!arguments.length) return variable[keyword]; // type check\n\n        if (variable[keyword] !== undefined && variable[keyword] !== null && typeof x !== typeof variable[keyword]) {\n          throw typeof x + \" doesn't match \" + typeof variable[keyword];\n        }\n\n        variable[keyword] = x;\n        return self;\n      };\n    };\n  };\n\n  d3.lollipop = function () {\n    var variable = {\n      bound: {\n        // bound of chart\n        top: 30,\n        // top area for legend\n        right: 0,\n        // right area for nothing\n        bottom: 20,\n        // bottom area for x axis\n        left: 50 // left area for y axis\n\n      },\n      height: 500,\n      // height of chart\n      width: undefined,\n      // width of chart, if is defined, the size is fixed\n      barWidth: 100,\n      // width of lollipop, including left and right paddings\n      radius: 40,\n      // radius length of lollipop\n      lollipopRatio: .4,\n      // ratio of lollipop\n      duration: 1000,\n      // duration for general transition\n      legendText: [],\n      // legend texts (with no element in array, legend will not show)\n      legendLeftPadding: 10,\n      // legend global padding from y-axis area\n      legendBoxSize: 5,\n      color: ['#1f77b4', '#2ca02c'],\n      yLabelText: 'Visits',\n      // text for y axis\n      tooltipText: function (d, i) {\n        return '';\n      },\n      tooltipDuration: 200,\n      parse: function (data) {\n        return [data[0], [data[1], data[2]]];\n      }\n    };\n    var invisible = 1e-6,\n        // JavaScript uses exponential expression for number smaller than 1e-6\n    // which cannot be recognized by CSS,\n    // to make transition work, invisible should be 1e-6, not 0\n    visible = 1; // Draw One Lollipop\n\n    var drawSingleLollipop = function (selections) {\n      // there is only one selection in each `selections`\n      selections.each(function (lollipopData, idx) {\n        // var [value, portion] = variable.parse(lollipopData),\n        var value = variable.parse(lollipopData)[0],\n            portion = variable.parse(lollipopData)[1],\n            selection = d3.select(this);\n        var yScale = variable.__yScale__; // `previousYScale` is only for animation:\n        // make sure every new element is coming from ground\n\n        var previousYScale = d3.scale.linear().domain([0, Infinity]).range(yScale.range()); // ========== Drawing Part ==========\n        //\n        // ===== Lollipop Container =====\n        // Lollipop will be drew inside the container\n        // `lollipopTransformHelper` takes scale function as parameter\n        // returns the function that can be used to `transform` attribute\n        // it will put element to the center of each bar\n\n        var lollipopTransformHelper = function (yScaleFunc) {\n          return function (d, i) {\n            return 'translate(' + variable.barWidth / 2 + ',' + yScaleFunc(d) + ')';\n          };\n        };\n\n        var lollipopContainer = selection.selectAll('g.lollipopContainer').data([value]);\n        lollipopContainer.enter().append('g').attr({\n          'class': 'lollipopContainer',\n          'transform': lollipopTransformHelper(previousYScale)\n        });\n        lollipopContainer.transition().duration(variable.duration).attr('transform', lollipopTransformHelper(yScale)); // ===== Lollipop =====\n        // `arc` defines the inner and outer radius of lollipops\n\n        var arc = d3.svg.arc().innerRadius(variable.radius * (1 - variable.lollipopRatio)).outerRadius(variable.radius); // `arcTween` defines how the lollipops will transite\n        // interpolate from current angle to new angle\n\n        var arcTween = function (d) {\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          return function (t) {\n            return arc(interpolate(t));\n          };\n        }; // `sumPortion` is the sum of all values in portion \n\n\n        var sumPortion = portion.reduce(function (previous, current) {\n          return previous + current;\n        }, 0); // `pie` convert data to pie\n        // depends on the size of `sumPortion`, the lollipop might not be\n        // a complete circle\n\n        var pie = d3.layout.pie().endAngle(variable.__arcScale__(sumPortion)); // `zeroDegree` is for animation only\n        // make sure all new ones span from 0 degree\n\n        var zeroDegree = {\n          'data': 0,\n          'endAngle': 0,\n          'startAngle': 0,\n          'padAngle': 0,\n          'value': 0\n        };\n        var lollipop = selection.selectAll('g.lollipopContainer').data([portion]).selectAll('path.lollipop').data(pie);\n        lollipop.enter().append('path').attr({\n          'class': 'lollipop',\n          'fill': function (d, i) {\n            return variable.color[i];\n          },\n          'd': arc\n        }).style('opacity', invisible).each(function (d) {\n          this._current = zeroDegree;\n        }); // store the initial angles\n\n        lollipop.transition().duration(variable.duration).style('opacity', visible).attrTween('d', arcTween); // ===== Indicator Line =====\n\n        var indicator = selection.selectAll('line.indicator').data([lollipopData]);\n        indicator.enter().append('line').attr({\n          'class': 'indicator',\n          'x1': variable.barWidth / 2,\n          'x2': variable.barWidth / 2,\n          'y1': function (d) {\n            return previousYScale(value);\n          },\n          'y2': previousYScale(0)\n        }).style('visible', invisible);\n        indicator.transition().duration(variable.duration).attr({\n          'y1': function (d) {\n            return yScale(value) + variable.radius * 1.2;\n          },\n          'y2': yScale(0)\n        }).style('visible', visible); // ===== Center Point in Lollipop =====\n\n        var centerPoint = selection.selectAll('circle.center').data([value]);\n        centerPoint.enter().append('circle').attr({\n          'class': 'center',\n          'r': 2,\n          'cx': variable.barWidth / 2,\n          'cy': function (d) {\n            return previousYScale(d);\n          }\n        }).style('opacity', invisible);\n        centerPoint.transition().duration(variable.duration).style('opacity', visible).attr('cy', function (d) {\n          return yScale(d);\n        });\n      }); // end of `selections.each()`\n    }; // end of `drawSinglelollipopBar()`\n\n\n    var lollipops = function (container) {\n      // chartData structure: [{}, {}, ...];\n      var chartData = container.datum(); // if `width` is defined, use fixed size for chart\n\n      if (variable.width !== undefined && typeof variable.width == typeof 0) {\n        variable.barWidth = variable.width / chartData.length;\n        variable.radius = Math.min(variable.barWidth / 2, variable.radius);\n      } // y scale (stored in variable for further usage)\n\n\n      variable.__yScale__ = d3.scale.linear().domain([0, d3.max(chartData, function (d) {\n        return variable.parse(d)[0];\n      }) * 1.1]).range([variable.height - variable.radius - variable.bound.bottom, variable.bound.top]); // only the lollipop with biggest sum can have complete circle,\n      // other conuts will only have partial circle, to reflect the sum\n      // `__arcScale__` will calculate the end angle of each circle\n\n      variable.__arcScale__ = d3.scale.linear().domain([0, d3.max(chartData, function (d) {\n        return variable.parse(d)[1].reduce(function (previous, current) {\n          return previous + current;\n        }, 0);\n      })]).range([0, 2 * Math.PI]); // create one DOM for tooltip\n\n      variable.__tooltip__ = variable.__tooltip__ || function () {\n        var dom = document.getElementById('tooltip');\n\n        if (!dom) {\n          dom = document.createElement('div');\n          dom.id = 'tooltip';\n          document.body.appendChild(dom);\n        }\n\n        return d3.select('#tooltip');\n      }(); // ===== lollipop Bar =====\n      // add container for each lollipopBar\n\n\n      var lollipops = container.selectAll('g.bar').data(chartData);\n      lollipops.enter().append('g').attr({\n        'height': variable.height - variable.bound.top - variable.bound.bottom,\n        'width': variable.barWidth,\n        'transform': function (d, i) {\n          return 'translate(' + (i * variable.barWidth + variable.bound.left) + ', 0)';\n        },\n        'class': 'bar'\n      }); // draw\n\n      lollipops.call(drawSingleLollipop); // add events for show/hide tooltip\n\n      lollipops.on('mouseover', function (d, i) {\n        variable.__tooltip__.style({\n          'font-size': '10px',\n          'margin-left': (i + 1) * variable.barWidth + variable.bound.left + 'px',\n          'margin-top': variable.__yScale__(variable.parse(d)[0]) + 'px'\n        }).html(variable.tooltipText(d, i));\n\n        variable.__tooltip__.transition().duration(variable.tooltipDuration).style({\n          'opacity': visible\n        });\n      });\n      lollipops.on('mouseout', function (d, i) {\n        variable.__tooltip__.transition().duration(variable.tooltipDuration).style('opacity', invisible);\n      });\n      lollipops.exit().remove(); // ===== legend =====\n      // legend container, contains all legends\n\n      var legendContainer = container.selectAll('g.legendContainer').data([chartData]);\n      legendContainer.enter().append('g').attr({\n        'class': 'legendContainer'\n      });\n      legendContainer.attr({\n        'transform': 'translate(' + variable.bound.left + ', 0)'\n      }); // single legend container\n\n      var legend = legendContainer.selectAll('g.legend').data(variable.legendText);\n      var currentShift = variable.legendLeftPadding;\n      var legendBoxSize = variable.legendBoxSize || 5; // add new legend container\n\n      var newlegend = legend.enter().append('g').attr({\n        'class': 'legend'\n      }); // legend rectangle\n\n      newlegend.append('rect').attr({\n        'class': 'legendRect',\n        'height': legendBoxSize,\n        'width': legendBoxSize,\n        'fill': function (d, i) {\n          return variable.color[i];\n        },\n        'transform': 'translate(' + 0 + ',' + 0 + ')'\n      }); // legend text\n\n      newlegend.append('text').attr({\n        'class': 'legendLabel',\n        'transform': 'translate(' + (legendBoxSize + 2) + ', ' + legendBoxSize + ')'\n      }).text(function (d) {\n        return d;\n      });\n      newlegend.attr({\n        'transform': function (d, i) {\n          var box = this.getBBox(),\n              ret = 'translate(' + currentShift + ', ' + (variable.bound.top - box.height) / 2 + ')';\n          currentShift += box.width + 5;\n          return ret;\n        }\n      }); // ===== Axis & Title =====\n\n      var ordinal = d3.scale.ordinal().domain(d3.range(chartData.length)).rangePoints([0, chartData.length * variable.barWidth], 1);\n      var xAxis = d3.svg.axis().scale(ordinal).orient('bottom').tickFormat(function (i) {\n        return chartData[i]['name'];\n      });\n      var yAxis = d3.svg.axis().scale(variable.__yScale__).orient('left');\n\n      variable.__accessories__ = variable.__accessories__ || function () {\n        var xAxis = container.append('g').attr({\n          'transform': 'translate(' + variable.bound.left + ', ' + (variable.height - variable.bound.bottom) + ')',\n          'class': 'x axis'\n        });\n        var yAxis = container.append('g').attr({\n          'transform': 'translate(' + variable.bound.left + ', 0)',\n          'class': 'y axis'\n        });\n        var yLabel = container.append('text').attr({\n          'transform': 'translate(' + variable.bound.left / 2 + ', ' + (variable.height - variable.bound.bottom) + ')',\n          'class': 'y label',\n          'text-anchor': 'middle'\n        });\n        return {\n          'xAxis': xAxis,\n          'yAxis': yAxis,\n          'yLabel': yLabel\n        };\n      }();\n\n      variable.__accessories__.xAxis.call(xAxis);\n\n      variable.__accessories__.yAxis.transition().duration(variable.duration).call(yAxis);\n\n      variable.__accessories__.yLabel.text(variable.yLabelText);\n    }; // add configuration functions inside\n\n\n    var customization = configHelper(lollipops, variable);\n    Object.keys(variable).forEach(function (keyword) {\n      lollipops[keyword] = customization(keyword);\n    });\n\n    lollipops.bound = function (top, right, bottom, left) {\n      if (arguments.length == 0) return variable.bound;\n\n      if (arguments.length == 1) {\n        var config = top;\n        Object.keys(variable.bound).forEach(function (keyword) {\n          if (!config[keyword]) variable.bound[keyword] = config[keyword];\n        });\n      }\n\n      variable.bound.top = top || variable.bound.top;\n      variable.bound.right = right || variable.bound.right;\n      variable.bound.bottom = bottom || variable.bound.bottom;\n      variable.bound.left = left || variable.bound.left;\n      return lollipops;\n    };\n\n    return lollipops;\n  };\n})();","map":{"version":3,"sources":["/home/fazal/Documents/claudius/D3-charts/src/lollipop.js"],"names":["configHelper","self","variable","keyword","x","arguments","length","undefined","d3","lollipop","bound","top","right","bottom","left","height","width","barWidth","radius","lollipopRatio","duration","legendText","legendLeftPadding","legendBoxSize","color","yLabelText","tooltipText","d","i","tooltipDuration","parse","data","invisible","visible","drawSingleLollipop","selections","each","lollipopData","idx","value","portion","selection","select","yScale","__yScale__","previousYScale","scale","linear","domain","Infinity","range","lollipopTransformHelper","yScaleFunc","lollipopContainer","selectAll","enter","append","attr","transition","arc","svg","innerRadius","outerRadius","arcTween","interpolate","_current","t","sumPortion","reduce","previous","current","pie","layout","endAngle","__arcScale__","zeroDegree","style","attrTween","indicator","centerPoint","lollipops","container","chartData","datum","Math","min","max","PI","__tooltip__","dom","document","getElementById","createElement","id","body","appendChild","call","on","html","exit","remove","legendContainer","legend","currentShift","newlegend","text","box","getBBox","ret","ordinal","rangePoints","xAxis","axis","orient","tickFormat","yAxis","__accessories__","yLabel","customization","Object","keys","forEach","config"],"mappings":"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","sourcesContent":["(function () {\n    // self: plugin\n    // variable: object where configuration stored\n    var configHelper = function (self, variable) {\n      // use curry to store `self` and `variable`\n      return function (keyword) {\n        return function (x) {\n          if (!arguments.length) return variable[keyword];\n          // type check\n          if (variable[keyword] !== undefined && \n              variable[keyword] !== null && \n              typeof x !== typeof variable[keyword]) {\n              throw (typeof x) + \" doesn't match \" + (typeof variable[keyword]);\n          }\n          variable[keyword] = x;\n          return self;\n        };\n      };\n    };\n  \n    d3.lollipop = function () {\n      \n      var variable = {\n        bound: {                 // bound of chart\n          top: 30,               // top area for legend\n          right: 0,              // right area for nothing\n          bottom: 20,            // bottom area for x axis\n          left: 50,              // left area for y axis\n        },\n        height: 500,             // height of chart\n        width: undefined,        // width of chart, if is defined, the size is fixed\n        \n        barWidth: 100,           // width of lollipop, including left and right paddings\n        radius: 40,              // radius length of lollipop\n        lollipopRatio: .4,       // ratio of lollipop\n        \n        duration: 1000,          // duration for general transition\n        \n        legendText: [],          // legend texts (with no element in array, legend will not show)\n        legendLeftPadding: 10,   // legend global padding from y-axis area\n        legendBoxSize: 5,\n        \n        color: ['#1f77b4', '#2ca02c'],\n        \n        yLabelText: 'Visits',    // text for y axis\n        \n        tooltipText: function(d,i) { return ''; },\n        tooltipDuration: 200,\n  \n        parse: function(data) { return [data[0], [data[1], data[2]]]; },\n      }\n  \n      var invisible = 1e-6, // JavaScript uses exponential expression for number smaller than 1e-6\n                              // which cannot be recognized by CSS,\n                              // to make transition work, invisible should be 1e-6, not 0\n        visible = 1;\n  \n      // Draw One Lollipop\n      var drawSingleLollipop = function (selections) {\n        // there is only one selection in each `selections`\n        selections.each(function (lollipopData, idx) {\n          // var [value, portion] = variable.parse(lollipopData),\n          var value = variable.parse(lollipopData)[0],\n              portion = variable.parse(lollipopData)[1],\n            selection = d3.select(this);\n  \n          var yScale = variable.__yScale__;\n          // `previousYScale` is only for animation:\n          // make sure every new element is coming from ground\n          var previousYScale = d3.scale.linear()\n            .domain([0, Infinity])\n            .range(yScale.range());\n  \n          // ========== Drawing Part ==========\n          //\n          // ===== Lollipop Container =====\n          // Lollipop will be drew inside the container\n          \n          // `lollipopTransformHelper` takes scale function as parameter\n          // returns the function that can be used to `transform` attribute\n          // it will put element to the center of each bar\n          var lollipopTransformHelper = function (yScaleFunc) {\n            return function (d, i) {\n              return 'translate(' + \n                (variable.barWidth / 2) + ',' +\n                yScaleFunc(d) + ')';\n            }\n          }\n          var lollipopContainer = selection\n              .selectAll('g.lollipopContainer')\n              .data([value]);\n          lollipopContainer\n            .enter()\n            .append('g')\n            .attr({\n              'class': 'lollipopContainer',\n              'transform': lollipopTransformHelper(previousYScale)\n            });\n  \n          lollipopContainer.transition()\n            .duration(variable.duration)\n            .attr('transform', lollipopTransformHelper(yScale));\n  \n          // ===== Lollipop =====\n  \n          // `arc` defines the inner and outer radius of lollipops\n          var arc = d3.svg.arc()\n            .innerRadius(variable.radius * (1 - variable.lollipopRatio))\n            .outerRadius(variable.radius);\n          // `arcTween` defines how the lollipops will transite\n          // interpolate from current angle to new angle\n          var arcTween = function (d) {\n            var interpolate = d3.interpolate(this._current, d);\n            this._current = interpolate(0);\n            return function(t) { return arc(interpolate(t)); };\n          };\n          // `sumPortion` is the sum of all values in portion \n          var sumPortion = portion.reduce(function(previous, current) { \n              return previous + current; \n              }, 0);\n          // `pie` convert data to pie\n          // depends on the size of `sumPortion`, the lollipop might not be\n          // a complete circle\n          var pie = d3.layout.pie().endAngle(variable.__arcScale__(sumPortion));\n          // `zeroDegree` is for animation only\n          // make sure all new ones span from 0 degree\n          var zeroDegree = {\n                  'data': 0,\n                  'endAngle': 0,\n                  'startAngle': 0,\n                  'padAngle': 0,\n                  'value':0                \n              };\n  \n          var lollipop = selection.selectAll('g.lollipopContainer')\n              .data([portion])\n              .selectAll('path.lollipop')\n              .data(pie);\n  \n          lollipop\n            .enter()\n            .append('path')\n            .attr({\n              'class': 'lollipop',\n              'fill': function(d, i) { return variable.color[i]; },\n              'd': arc\n            })\n            .style('opacity', invisible)\n            .each(function (d) {\n              this._current = zeroDegree;\n            }); // store the initial angles\n  \n          lollipop.transition()\n            .duration(variable.duration)\n            .style('opacity', visible)\n            .attrTween('d', arcTween);\n  \n          // ===== Indicator Line =====\n  \n          var indicator = selection.selectAll('line.indicator')\n            .data([lollipopData]);\n          indicator.\n            enter().\n            append('line').\n            attr({\n              'class': 'indicator',\n              'x1': variable.barWidth / 2,\n              'x2': variable.barWidth / 2,\n              'y1': function(d) { return previousYScale(value); },\n              'y2': previousYScale(0)\n            }).\n            style('visible', invisible);\n  \n          indicator.\n            transition().\n            duration(variable.duration).\n            attr({\n              'y1': function(d) { return yScale(value) + variable.radius * 1.2; },\n              'y2': yScale(0)\n            }).\n            style('visible', visible);\n  \n          // ===== Center Point in Lollipop =====\n          var centerPoint = selection.selectAll('circle.center').data([value]);\n  \n          centerPoint.\n            enter().\n            append('circle').\n            attr({\n              'class': 'center',\n              'r': 2,\n              'cx': variable.barWidth / 2,\n              'cy': function(d) { return previousYScale(d); }\n            }).\n            style('opacity', invisible);\n  \n          centerPoint.\n            transition().\n            duration(variable.duration).\n            style('opacity', visible).\n            attr('cy', function(d) { return yScale(d); });\n  \n        }); // end of `selections.each()`\n      }; // end of `drawSinglelollipopBar()`\n  \n      var lollipops = function (container) {\n  \n        // chartData structure: [{}, {}, ...];\n        var chartData = container.datum();\n  \n        // if `width` is defined, use fixed size for chart\n        if (variable.width !== undefined && typeof variable.width == typeof 0) {\n            variable.barWidth = variable.width / chartData.length;\n            variable.radius = Math.min(variable.barWidth / 2, variable.radius);\n        }\n  \n      // y scale (stored in variable for further usage)\n       variable.__yScale__ = d3.scale.linear()\n            .domain([0, d3.max(chartData, function(d) { return variable.parse(d)[0]; }) * 1.1])\n            .range([ \n              variable.height - variable.radius - variable.bound.bottom,\n              variable.bound.top\n              ]);\n  \n       // only the lollipop with biggest sum can have complete circle,\n       // other conuts will only have partial circle, to reflect the sum\n       // `__arcScale__` will calculate the end angle of each circle\n       variable.__arcScale__ = d3.scale.linear()\n            .domain([0, d3.max(chartData, function(d) { \n              return variable.parse(d)[1].reduce(\n                function(previous, current) { return previous + current; }, \n                0);\n            })])\n            .range([0, 2 * Math.PI]);\n  \n       // create one DOM for tooltip\n       variable.__tooltip__ = variable.__tooltip__ || (function() {\n       var dom = document.getElementById('tooltip');\n          if (!dom) {\n            dom = document.createElement('div');\n            dom.id = 'tooltip';\n            document.body.appendChild(dom);\n          }\n          return d3.select('#tooltip');\n        })();\n  \n        // ===== lollipop Bar =====\n        // add container for each lollipopBar\n        var lollipops = container\n          .selectAll('g.bar')\n          .data(chartData);\n        lollipops.enter()\n          .append('g')\n          .attr({\n            'height': variable.height - \n                      variable.bound.top - \n                      variable.bound.bottom,\n            'width': variable.barWidth,\n            'transform': function(d, i) { return 'translate(' + \n                      (i * variable.barWidth + \n                        variable.bound.left) + ', 0)'; },\n            'class': 'bar'\n          });\n        // draw\n        lollipops.call(drawSingleLollipop);\n  \n        // add events for show/hide tooltip\n        lollipops.on('mouseover', function(d, i) {\n          variable.__tooltip__.style({\n            'font-size': '10px',\n            'margin-left': ((i + 1) * variable.barWidth + \n                            variable.bound.left) + 'px',\n            'margin-top': (variable.__yScale__(variable.parse(d)[0])) + 'px'\n          }).html(variable.tooltipText(d, i));\n          \n          variable.__tooltip__\n          .transition()\n            .duration(variable.tooltipDuration)\n            .style({\n            'opacity': visible\n            });\n        });\n        lollipops.on('mouseout', function(d, i) {\n          variable.__tooltip__\n          .transition()\n            .duration(variable.tooltipDuration)\n            .style('opacity', invisible);\n        })\n        \n        lollipops.exit().remove();\n          \n        // ===== legend =====\n        \n        // legend container, contains all legends\n        var legendContainer = container\n          .selectAll('g.legendContainer')\n          .data([chartData]);\n          \n        legendContainer\n          .enter()\n          .append('g')\n          .attr({\n            'class': 'legendContainer'\n          });\n          \n        legendContainer\n          .attr({\n            'transform': 'translate(' + \n              (variable.bound.left) +\n              ', 0)'\n          });\n  \n        // single legend container\n        var legend = legendContainer.selectAll('g.legend')\n          .data(variable.legendText);\n        var currentShift = variable.legendLeftPadding;\n        var legendBoxSize = variable.legendBoxSize || 5;\n        // add new legend container\n        var newlegend = legend\n          .enter()\n          .append('g')\n          .attr({\n            'class': 'legend'\n          });\n        // legend rectangle\n        newlegend.append('rect')\n          .attr({\n            'class': 'legendRect',\n            'height': legendBoxSize,\n            'width': legendBoxSize,\n            'fill': function(d, i) { return variable.color[i]; },\n            'transform': 'translate(' + \n              0 + ',' + \n              0 + ')'\n          });\n        // legend text\n        newlegend.append('text')\n          .attr({\n            'class': 'legendLabel',\n            'transform': 'translate(' + \n              (legendBoxSize + 2) + \n              ', ' + (legendBoxSize) + ')'\n          }).\n          text(function(d) { return d; });\n          newlegend.attr({\n            'transform': function (d, i) {\n                var box = this.getBBox(), \n                  ret = 'translate(' + (currentShift) + ', ' + (variable.bound.top - box.height) / 2 +')';\n                currentShift += box.width + 5;\n                return ret;\n            }\n          })\n  \n        // ===== Axis & Title =====\n        var ordinal = d3.scale.ordinal()\n          .domain(d3.range(chartData.length))\n          .rangePoints([0, chartData.length * variable.barWidth], 1);\n        var xAxis = d3.svg.axis()\n          .scale(ordinal)\n          .orient('bottom')\n          .tickFormat(function(i) { return chartData[i]['name']; });\n        var yAxis = d3.svg.axis()\n          .scale(variable.__yScale__)\n          .orient('left');\n  \n        variable.__accessories__ = variable.__accessories__ || (function () {\n          var xAxis = container.append('g').\n            attr({\n              'transform': 'translate(' + \n                (variable.bound.left) + ', ' + \n                (variable.height - variable.bound.bottom) + ')',\n              'class': 'x axis'\n            });\n          var yAxis = container.append('g').\n            attr({\n              'transform': 'translate(' + (variable.bound.left) + ', 0)',\n              'class': 'y axis'\n              });\n          var yLabel = container.append('text').\n            attr({\n              'transform': 'translate(' + \n                (variable.bound.left / 2) + ', ' + \n                (variable.height - variable.bound.bottom) + ')',\n              'class': 'y label',\n              'text-anchor': 'middle'\n            });\n          return {\n            'xAxis': xAxis,\n            'yAxis': yAxis,\n            'yLabel': yLabel\n          }\n        })();\n  \n        variable.__accessories__.xAxis.\n          call(xAxis);\n  \n        variable.__accessories__.yAxis.\n          transition().duration(variable.duration).\n          call(yAxis);\n  \n        variable.__accessories__.yLabel.\n          text(variable.yLabelText);\n          \n      }\n  \n      // add configuration functions inside\n      var customization = configHelper(lollipops, variable);\n      Object.keys(variable).forEach(function(keyword) {\n        lollipops[keyword] = customization(keyword);\n      });\n      lollipops.bound = function(top, right, bottom, left) {\n          if (arguments.length == 0) return variable.bound;\n          if (arguments.length == 1) {\n              var config = top;\n              Object.keys(variable.bound).forEach(function(keyword) {\n                  if (!config[keyword]) variable.bound[keyword] = config[keyword];\n              });\n          }\n          variable.bound.top = top || variable.bound.top;\n          variable.bound.right = right || variable.bound.right;\n          variable.bound.bottom = bottom || variable.bound.bottom;\n          variable.bound.left = left || variable.bound.left;\n          return lollipops;\n      }\n      \n      return lollipops;\n    }\n  \n  })()"]},"metadata":{},"sourceType":"module"}