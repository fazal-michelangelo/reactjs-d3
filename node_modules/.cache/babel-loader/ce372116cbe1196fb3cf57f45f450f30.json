{"ast":null,"code":"var _jsxFileName = \"/home/fazal/Documents/claudius/D3-charts/src/LollipopChart5.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { lab } from 'd3';\n\nconst moment = require('moment');\n\nconst LollipopChart = props => {\n  useEffect(() => {\n    drawChart();\n  });\n\n  function drawChart() {\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(d3Container.current).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //Read the data\n    // d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\",\n\n    var testData = [{\n      \"date\": \"2013-04-28\",\n      \"value\": 135.98\n    }, {\n      \"date\": \"2013-04-29\",\n      \"value\": 147.49\n    }, {\n      \"date\": \"2013-04-30\",\n      \"value\": 146.93\n    }, {\n      \"date\": \"2013-05-01\",\n      \"value\": 139.89\n    }, {\n      \"date\": \"2013-05-02\",\n      \"value\": 125.6\n    }, {\n      \"date\": \"2013-05-03\",\n      \"value\": 108.13\n    }, {\n      \"date\": \"2013-05-04\",\n      \"value\": 115\n    }, {\n      \"date\": \"2013-05-05\",\n      \"value\": 118.8\n    }, {\n      \"date\": \"2013-05-06\",\n      \"value\": 124.66\n    }, {\n      \"date\": \"2013-05-07\",\n      \"value\": 113.44\n    }, {\n      \"date\": \"2013-05-08\",\n      \"value\": 115.78\n    }, {\n      \"date\": \"2013-05-09\",\n      \"value\": 113.46\n    }, {\n      \"date\": \"2013-05-10\",\n      \"value\": 122\n    }, {\n      \"date\": \"2013-05-11\",\n      \"value\": 118.68\n    }, {\n      \"date\": \"2013-05-12\",\n      \"value\": 117.45\n    }, {\n      \"date\": \"2013-05-13\",\n      \"value\": 118.7\n    }, {\n      \"date\": \"2013-05-14\",\n      \"value\": 119.8\n    }, {\n      \"date\": \"2013-05-15\",\n      \"value\": 115.81\n    }, {\n      \"date\": \"2013-05-16\",\n      \"value\": 118.76\n    }, {\n      \"date\": \"2013-05-17\",\n      \"value\": 125.3\n    }, {\n      \"date\": \"2013-05-18\",\n      \"value\": 125.25\n    }, {\n      \"date\": \"2013-05-19\",\n      \"value\": 124.5\n    }, {\n      \"date\": \"2013-05-20\",\n      \"value\": 123.62\n    }, {\n      \"date\": \"2013-05-21\",\n      \"value\": 123\n    }, {\n      \"date\": \"2013-05-22\",\n      \"value\": 124\n    }, {\n      \"date\": \"2013-05-23\",\n      \"value\": 126.93\n    }, {\n      \"date\": \"2013-05-24\",\n      \"value\": 133.85\n    }, {\n      \"date\": \"2013-05-25\",\n      \"value\": 133.22\n    }, {\n      \"date\": \"2013-05-26\",\n      \"value\": 136\n    }, {\n      \"date\": \"2013-05-27\",\n      \"value\": 135.47\n    }, {\n      \"date\": \"2013-05-28\",\n      \"value\": 130.58\n    }, {\n      \"date\": \"2013-05-29\",\n      \"value\": 132.59\n    }, {\n      \"date\": \"2013-05-30\",\n      \"value\": 132.25\n    }, {\n      \"date\": \"2013-05-31\",\n      \"value\": 129.9\n    }, {\n      \"date\": \"2013-06-01\",\n      \"value\": 129.78\n    }, {\n      \"date\": \"2013-06-02\",\n      \"value\": 129.4\n    }, {\n      \"date\": \"2013-06-03\",\n      \"value\": 122.5\n    }, {\n      \"date\": \"2013-06-04\",\n      \"value\": 123.84\n    }, {\n      \"date\": \"2013-06-05\",\n      \"value\": 123.47\n    }, {\n      \"date\": \"2013-06-06\",\n      \"value\": 123.1\n    }, {\n      \"date\": \"2013-06-07\",\n      \"value\": 119\n    }, {\n      \"date\": \"2013-06-08\",\n      \"value\": 111.42\n    }, {\n      \"date\": \"2013-06-09\",\n      \"value\": 108.99\n    }, {\n      \"date\": \"2013-06-10\",\n      \"value\": 110.1\n    }, {\n      \"date\": \"2013-06-11\",\n      \"value\": 109.6\n    }, {\n      \"date\": \"2013-06-12\",\n      \"value\": 111.79\n    }, {\n      \"date\": \"2013-06-13\",\n      \"value\": 110.3\n    }, {\n      \"date\": \"2013-06-14\",\n      \"value\": 104.7\n    }, {\n      \"date\": \"2013-06-15\",\n      \"value\": 103.7\n    }, {\n      \"date\": \"2013-06-16\",\n      \"value\": 101.6\n    }, {\n      \"date\": \"2013-06-17\",\n      \"value\": 102.21\n    }, {\n      \"date\": \"2013-06-18\",\n      \"value\": 111.11\n    }, {\n      \"date\": \"2013-06-19\",\n      \"value\": 110.22\n    }, {\n      \"date\": \"2013-06-20\",\n      \"value\": 114.3\n    }, {\n      \"date\": \"2013-06-21\",\n      \"value\": 114.99\n    }, {\n      \"date\": \"2013-06-22\",\n      \"value\": 109.96\n    }, {\n      \"date\": \"2013-06-23\",\n      \"value\": 108.8\n    }, {\n      \"date\": \"2013-06-24\",\n      \"value\": 108.33\n    }, {\n      \"date\": \"2013-06-25\",\n      \"value\": 106.47\n    }, {\n      \"date\": \"2013-06-26\",\n      \"value\": 105.49\n    }, {\n      \"date\": \"2013-06-27\",\n      \"value\": 104\n    }, {\n      \"date\": \"2013-06-28\",\n      \"value\": 101.74\n    }, {\n      \"date\": \"2013-06-29\",\n      \"value\": 99.99\n    }, {\n      \"date\": \"2013-06-30\",\n      \"value\": 98.12\n    }, {\n      \"date\": \"2013-07-01\",\n      \"value\": 97.66\n    }, {\n      \"date\": \"2013-07-02\",\n      \"value\": 92.3\n    }, {\n      \"date\": \"2013-07-03\",\n      \"value\": 90.98\n    }, {\n      \"date\": \"2013-07-04\",\n      \"value\": 83.11\n    }, {\n      \"date\": \"2013-07-05\",\n      \"value\": 80\n    }, {\n      \"date\": \"2013-07-06\",\n      \"value\": 75\n    }, {\n      \"date\": \"2013-07-07\",\n      \"value\": 74.56\n    }, {\n      \"date\": \"2013-07-08\",\n      \"value\": 80\n    }, {\n      \"date\": \"2013-07-09\",\n      \"value\": 78.3\n    }, {\n      \"date\": \"2013-07-10\",\n      \"value\": 87\n    }, {\n      \"date\": \"2013-07-11\",\n      \"value\": 90.28\n    }, {\n      \"date\": \"2013-07-12\",\n      \"value\": 104\n    }, {\n      \"date\": \"2013-07-13\",\n      \"value\": 98.25\n    }, {\n      \"date\": \"2013-07-14\",\n      \"value\": 98.7\n    }, {\n      \"date\": \"2013-07-15\",\n      \"value\": 101.9\n    }, {\n      \"date\": \"2013-07-16\",\n      \"value\": 99.86\n    }, {\n      \"date\": \"2013-07-17\",\n      \"value\": 99.97\n    }, {\n      \"date\": \"2013-07-18\",\n      \"value\": 98.8\n    }, {\n      \"date\": \"2013-07-19\",\n      \"value\": 95.2\n    }, {\n      \"date\": \"2013-07-20\",\n      \"value\": 93.1\n    }, {\n      \"date\": \"2013-07-21\",\n      \"value\": 91.95\n    }, {\n      \"date\": \"2013-07-22\",\n      \"value\": 92\n    }, {\n      \"date\": \"2013-07-23\",\n      \"value\": 96.82\n    }, {\n      \"date\": \"2013-07-24\",\n      \"value\": 95.99\n    }, {\n      \"date\": \"2013-07-25\",\n      \"value\": 97.33\n    }, {\n      \"date\": \"2013-07-26\",\n      \"value\": 97.47\n    }, {\n      \"date\": \"2013-07-27\",\n      \"value\": 97\n    }, {\n      \"date\": \"2013-07-28\",\n      \"value\": 100.58\n    }, {\n      \"date\": \"2013-07-29\",\n      \"value\": 102.5\n    }, {\n      \"date\": \"2013-07-30\",\n      \"value\": 107.99\n    }, {\n      \"date\": \"2013-07-31\",\n      \"value\": 111.34\n    }, {\n      \"date\": \"2013-08-01\",\n      \"value\": 108\n    }, {\n      \"date\": \"2013-08-02\",\n      \"value\": 108\n    }, {\n      \"date\": \"2013-08-03\",\n      \"value\": 105.78\n    }, {\n      \"date\": \"2013-08-04\",\n      \"value\": 105.95\n    }]; // When reading the csv, I must format variables:\n    //   function dateFormat (d){\n    //     return { date : d3.timeParse(\"%Y-%m-%d\")(d.date), value : d.value }\n    //   }\n    //   dateFormat(data)\n\n    var data = [];\n\n    function dateFormat() {\n      for (var i = 0; i < testData.length; i++) {\n        data.push({\n          date: d3.timeParse(\"%Y-%m-%d\")(testData[i].date),\n          value: testData[i].value\n        });\n      }\n    }\n\n    dateFormat(); // Now I can use this dataset:\n    //   function(data) {\n    // Add X axis --> it is a date format\n\n    var x = d3.scaleTime().domain(d3.extent(data, function (d) {\n      return d.date;\n    })).range([0, width]);\n    var xAxis = svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n    var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.value;\n    })]).range([height, 0]);\n    var yAxis = svg.append(\"g\").call(d3.axisLeft(y)); // Add a clipPath: everything out of this area won't be drawn.\n\n    var clip = svg.append(\"defs\").append(\"svg:clipPath\").attr(\"id\", \"clip\").append(\"svg:rect\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", 0).attr(\"y\", 0); // Add brushing\n\n    var brush = d3.brushX() // Add the brush feature using the d3.brush function\n    .extent([[0, 0], [width, height]]) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n    .on(\"end\", updateChart); // Each time the brush selection changes, trigger the 'updateChart' function\n    // Create the line variable: where both the line and the brush take place\n    // var line = svg.append('g')\n    //   .attr(\"clip-path\", \"url(#clip)\")\n    // // Add the line\n    // line.append(\"path\")\n    //   .datum(data)\n    //   .attr(\"class\", \"line\")  // I add the class line to be able to modify this line later on.\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"steelblue\")\n    //   .attr(\"stroke-width\", 1.5)\n    //   .attr(\"d\", d3.line()\n    //     .x(function(d) { return x(d.date) })\n    //     .y(function(d) { return y(d.value) })\n    //     )\n\n    let bubbleGroup = svg.append('g').attr('id', 'bubble-group');\n    bubbleGroup.transition().attr('transform', 'translate(' + margin.left + ', 0)'); // data(data);\n\n    let line = bubbleGroup.selectAll('g').data(data).enter().append('g'); // group.append('text')\n    // .text(function(d) {return d[textVal]})\n    // .attr(\"x\", function (d) { return x(d.date)+10 })\n    // .attr(\"y\", function (d) { return y(d.value); })\n    // .style('font-size', '10px')\n\n    line.append('circle').attr(\"cx\", function (d) {\n      return x(d.date);\n    }).attr(\"cy\", function (d) {\n      return y(d.value);\n    }).attr(\"r\", 7); // Add the brushing\n\n    line.append(\"g\").attr(\"class\", \"brush\").call(brush); // A function that set idleTimeOut to null\n\n    var idleTimeout;\n\n    function idled() {\n      idleTimeout = null;\n    } // A function that update the chart for given boundaries\n\n\n    function updateChart() {\n      // What are the selected boundaries?\n      var extent = d3.event.selection; // If no selection, back to initial coordinate. Otherwise, update X axis domain\n\n      if (!extent) {\n        if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n\n        x.domain([4, 8]);\n      } else {\n        x.domain([x.invert(extent[0]), x.invert(extent[1])]);\n        line.select(\".brush\").call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n      } // Update axis and line position\n\n\n      xAxis.transition().duration(1000).call(d3.axisBottom(x));\n      line.select('.line').transition().duration(1000).attr(\"d\", d3.line().x(function (d) {\n        return x(d.date);\n      }).y(function (d) {\n        return y(d.value);\n      }));\n    } // If user double click, reinitialize the chart\n\n\n    svg.on(\"dblclick\", function () {\n      x.domain(d3.extent(data, function (d) {\n        return d.date;\n      }));\n      xAxis.transition().call(d3.axisBottom(x));\n      line.select('.line').transition().attr(\"d\", d3.line().x(function (d) {\n        return x(d.date);\n      }).y(function (d) {\n        return y(d.value);\n      }));\n    }); // })\n  }\n\n  const d3Container = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d3-lollipop-chart\",\n    width: 996,\n    height: 444,\n    ref: d3Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default LollipopChart;","map":{"version":3,"sources":["/home/fazal/Documents/claudius/D3-charts/src/LollipopChart5.js"],"names":["React","useRef","useEffect","d3","lab","moment","require","LollipopChart","props","drawChart","margin","top","right","bottom","left","width","height","svg","select","d3Container","current","append","attr","testData","data","dateFormat","i","length","push","date","timeParse","value","x","scaleTime","domain","extent","d","range","xAxis","call","axisBottom","y","scaleLinear","max","yAxis","axisLeft","clip","brush","brushX","on","updateChart","bubbleGroup","transition","line","selectAll","enter","idleTimeout","idled","event","selection","setTimeout","invert","move","duration"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { lab } from 'd3';\nconst moment = require('moment');\n\n\nconst LollipopChart = (props) => {\n    useEffect(() => {\n        drawChart();\n    });\n\n    function drawChart() {\n        var margin = {top: 10, right: 30, bottom: 30, left: 60},\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom;\n    \n    // append the svg object to the body of the page\n    var svg = d3.select(d3Container.current)\n      .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\",\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    //Read the data\n    // d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\",\n    \n\n    var testData = [\n        {\n          \"date\": \"2013-04-28\",\n          \"value\": 135.98\n        },\n        {\n          \"date\": \"2013-04-29\",\n          \"value\": 147.49\n        },\n        {\n          \"date\": \"2013-04-30\",\n          \"value\": 146.93\n        },\n        {\n          \"date\": \"2013-05-01\",\n          \"value\": 139.89\n        },\n        {\n          \"date\": \"2013-05-02\",\n          \"value\": 125.6\n        },\n        {\n          \"date\": \"2013-05-03\",\n          \"value\": 108.13\n        },\n        {\n          \"date\": \"2013-05-04\",\n          \"value\": 115\n        },\n        {\n          \"date\": \"2013-05-05\",\n          \"value\": 118.8\n        },\n        {\n          \"date\": \"2013-05-06\",\n          \"value\": 124.66\n        },\n        {\n          \"date\": \"2013-05-07\",\n          \"value\": 113.44\n        },\n        {\n          \"date\": \"2013-05-08\",\n          \"value\": 115.78\n        },\n        {\n          \"date\": \"2013-05-09\",\n          \"value\": 113.46\n        },\n        {\n          \"date\": \"2013-05-10\",\n          \"value\": 122\n        },\n        {\n          \"date\": \"2013-05-11\",\n          \"value\": 118.68\n        },\n        {\n          \"date\": \"2013-05-12\",\n          \"value\": 117.45\n        },\n        {\n          \"date\": \"2013-05-13\",\n          \"value\": 118.7\n        },\n        {\n          \"date\": \"2013-05-14\",\n          \"value\": 119.8\n        },\n        {\n          \"date\": \"2013-05-15\",\n          \"value\": 115.81\n        },\n        {\n          \"date\": \"2013-05-16\",\n          \"value\": 118.76\n        },\n        {\n          \"date\": \"2013-05-17\",\n          \"value\": 125.3\n        },\n        {\n          \"date\": \"2013-05-18\",\n          \"value\": 125.25\n        },\n        {\n          \"date\": \"2013-05-19\",\n          \"value\": 124.5\n        },\n        {\n          \"date\": \"2013-05-20\",\n          \"value\": 123.62\n        },\n        {\n          \"date\": \"2013-05-21\",\n          \"value\": 123\n        },\n        {\n          \"date\": \"2013-05-22\",\n          \"value\": 124\n        },\n        {\n          \"date\": \"2013-05-23\",\n          \"value\": 126.93\n        },\n        {\n          \"date\": \"2013-05-24\",\n          \"value\": 133.85\n        },\n        {\n          \"date\": \"2013-05-25\",\n          \"value\": 133.22\n        },\n        {\n          \"date\": \"2013-05-26\",\n          \"value\": 136\n        },\n        {\n          \"date\": \"2013-05-27\",\n          \"value\": 135.47\n        },\n        {\n          \"date\": \"2013-05-28\",\n          \"value\": 130.58\n        },\n        {\n          \"date\": \"2013-05-29\",\n          \"value\": 132.59\n        },\n        {\n          \"date\": \"2013-05-30\",\n          \"value\": 132.25\n        },\n        {\n          \"date\": \"2013-05-31\",\n          \"value\": 129.9\n        },\n        {\n          \"date\": \"2013-06-01\",\n          \"value\": 129.78\n        },\n        {\n          \"date\": \"2013-06-02\",\n          \"value\": 129.4\n        },\n        {\n          \"date\": \"2013-06-03\",\n          \"value\": 122.5\n        },\n        {\n          \"date\": \"2013-06-04\",\n          \"value\": 123.84\n        },\n        {\n          \"date\": \"2013-06-05\",\n          \"value\": 123.47\n        },\n        {\n          \"date\": \"2013-06-06\",\n          \"value\": 123.1\n        },\n        {\n          \"date\": \"2013-06-07\",\n          \"value\": 119\n        },\n        {\n          \"date\": \"2013-06-08\",\n          \"value\": 111.42\n        },\n        {\n          \"date\": \"2013-06-09\",\n          \"value\": 108.99\n        },\n        {\n          \"date\": \"2013-06-10\",\n          \"value\": 110.1\n        },\n        {\n          \"date\": \"2013-06-11\",\n          \"value\": 109.6\n        },\n        {\n          \"date\": \"2013-06-12\",\n          \"value\": 111.79\n        },\n        {\n          \"date\": \"2013-06-13\",\n          \"value\": 110.3\n        },\n        {\n          \"date\": \"2013-06-14\",\n          \"value\": 104.7\n        },\n        {\n          \"date\": \"2013-06-15\",\n          \"value\": 103.7\n        },\n        {\n          \"date\": \"2013-06-16\",\n          \"value\": 101.6\n        },\n        {\n          \"date\": \"2013-06-17\",\n          \"value\": 102.21\n        },\n        {\n          \"date\": \"2013-06-18\",\n          \"value\": 111.11\n        },\n        {\n          \"date\": \"2013-06-19\",\n          \"value\": 110.22\n        },\n        {\n          \"date\": \"2013-06-20\",\n          \"value\": 114.3\n        },\n        {\n          \"date\": \"2013-06-21\",\n          \"value\": 114.99\n        },\n        {\n          \"date\": \"2013-06-22\",\n          \"value\": 109.96\n        },\n        {\n          \"date\": \"2013-06-23\",\n          \"value\": 108.8\n        },\n        {\n          \"date\": \"2013-06-24\",\n          \"value\": 108.33\n        },\n        {\n          \"date\": \"2013-06-25\",\n          \"value\": 106.47\n        },\n        {\n          \"date\": \"2013-06-26\",\n          \"value\": 105.49\n        },\n        {\n          \"date\": \"2013-06-27\",\n          \"value\": 104\n        },\n        {\n          \"date\": \"2013-06-28\",\n          \"value\": 101.74\n        },\n        {\n          \"date\": \"2013-06-29\",\n          \"value\": 99.99\n        },\n        {\n          \"date\": \"2013-06-30\",\n          \"value\": 98.12\n        },\n        {\n          \"date\": \"2013-07-01\",\n          \"value\": 97.66\n        },\n        {\n          \"date\": \"2013-07-02\",\n          \"value\": 92.3\n        },\n        {\n          \"date\": \"2013-07-03\",\n          \"value\": 90.98\n        },\n        {\n          \"date\": \"2013-07-04\",\n          \"value\": 83.11\n        },\n        {\n          \"date\": \"2013-07-05\",\n          \"value\": 80\n        },\n        {\n          \"date\": \"2013-07-06\",\n          \"value\": 75\n        },\n        {\n          \"date\": \"2013-07-07\",\n          \"value\": 74.56\n        },\n        {\n          \"date\": \"2013-07-08\",\n          \"value\": 80\n        },\n        {\n          \"date\": \"2013-07-09\",\n          \"value\": 78.3\n        },\n        {\n          \"date\": \"2013-07-10\",\n          \"value\": 87\n        },\n        {\n          \"date\": \"2013-07-11\",\n          \"value\": 90.28\n        },\n        {\n          \"date\": \"2013-07-12\",\n          \"value\": 104\n        },\n        {\n          \"date\": \"2013-07-13\",\n          \"value\": 98.25\n        },\n        {\n          \"date\": \"2013-07-14\",\n          \"value\": 98.7\n        },\n        {\n          \"date\": \"2013-07-15\",\n          \"value\": 101.9\n        },\n        {\n          \"date\": \"2013-07-16\",\n          \"value\": 99.86\n        },\n        {\n          \"date\": \"2013-07-17\",\n          \"value\": 99.97\n        },\n        {\n          \"date\": \"2013-07-18\",\n          \"value\": 98.8\n        },\n        {\n          \"date\": \"2013-07-19\",\n          \"value\": 95.2\n        },\n        {\n          \"date\": \"2013-07-20\",\n          \"value\": 93.1\n        },\n        {\n          \"date\": \"2013-07-21\",\n          \"value\": 91.95\n        },\n        {\n          \"date\": \"2013-07-22\",\n          \"value\": 92\n        },\n        {\n          \"date\": \"2013-07-23\",\n          \"value\": 96.82\n        },\n        {\n          \"date\": \"2013-07-24\",\n          \"value\": 95.99\n        },\n        {\n          \"date\": \"2013-07-25\",\n          \"value\": 97.33\n        },\n        {\n          \"date\": \"2013-07-26\",\n          \"value\": 97.47\n        },\n        {\n          \"date\": \"2013-07-27\",\n          \"value\": 97\n        },\n        {\n          \"date\": \"2013-07-28\",\n          \"value\": 100.58\n        },\n        {\n          \"date\": \"2013-07-29\",\n          \"value\": 102.5\n        },\n        {\n          \"date\": \"2013-07-30\",\n          \"value\": 107.99\n        },\n        {\n          \"date\": \"2013-07-31\",\n          \"value\": 111.34\n        },\n        {\n          \"date\": \"2013-08-01\",\n          \"value\": 108\n        },\n        {\n          \"date\": \"2013-08-02\",\n          \"value\": 108\n        },\n        {\n          \"date\": \"2013-08-03\",\n          \"value\": 105.78\n        },\n        {\n          \"date\": \"2013-08-04\",\n          \"value\": 105.95\n        }\n      ]\n\n\n      // When reading the csv, I must format variables:\n    //   function dateFormat (d){\n    //     return { date : d3.timeParse(\"%Y-%m-%d\")(d.date), value : d.value }\n    //   }\n\n    //   dateFormat(data)\n\n\n    var data = [];\n    \n    function dateFormat() {\n        for(var i = 0; i < testData.length; i++) {\n            data.push({ date : d3.timeParse(\"%Y-%m-%d\")(testData[i].date), value : testData[i].value })\n        }\n     }\n\n    dateFormat();\n    \n      // Now I can use this dataset:\n    //   function(data) {\n    \n        // Add X axis --> it is a date format\n        var x = d3.scaleTime()\n          .domain(d3.extent(data, function(d) { return d.date; }))\n          .range([ 0, width ]);\n        var xAxis = svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x));\n    \n        // Add Y axis\n        var y = d3.scaleLinear()\n          .domain([0, d3.max(data, function(d) { return +d.value; })])\n          .range([ height, 0 ]);\n        var yAxis = svg.append(\"g\")\n          .call(d3.axisLeft(y));\n    \n        // Add a clipPath: everything out of this area won't be drawn.\n        var clip = svg.append(\"defs\").append(\"svg:clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"svg:rect\")\n            .attr(\"width\", width )\n            .attr(\"height\", height )\n            .attr(\"x\", 0)\n            .attr(\"y\", 0);\n    \n        // Add brushing\n        var brush = d3.brushX()                   // Add the brush feature using the d3.brush function\n            .extent( [ [0,0], [width,height] ] )  // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n            .on(\"end\", updateChart)               // Each time the brush selection changes, trigger the 'updateChart' function\n    \n        // Create the line variable: where both the line and the brush take place\n        // var line = svg.append('g')\n        //   .attr(\"clip-path\", \"url(#clip)\")\n    \n        // // Add the line\n        // line.append(\"path\")\n        //   .datum(data)\n        //   .attr(\"class\", \"line\")  // I add the class line to be able to modify this line later on.\n        //   .attr(\"fill\", \"none\")\n        //   .attr(\"stroke\", \"steelblue\")\n        //   .attr(\"stroke-width\", 1.5)\n        //   .attr(\"d\", d3.line()\n        //     .x(function(d) { return x(d.date) })\n        //     .y(function(d) { return y(d.value) })\n        //     )\n    \n    \n    \n            let bubbleGroup = svg.append('g').attr('id', 'bubble-group')\n    \n    \n            bubbleGroup.transition()\n            .attr('transform', 'translate('+ margin.left +', 0)')\n            \n            // data(data);\n    \n            let line = bubbleGroup.selectAll('g')\n            .data(data)\n            .enter()\n            .append('g')\n    \n    \n            // group.append('text')\n            // .text(function(d) {return d[textVal]})\n            // .attr(\"x\", function (d) { return x(d.date)+10 })\n            // .attr(\"y\", function (d) { return y(d.value); })\n            // .style('font-size', '10px')\n    \n    \n            line.append('circle')        \n            .attr(\"cx\", function (d) { return x(d.date) })\n            .attr(\"cy\", function (d) { return y(d.value); })\n            .attr(\"r\", 7)\n    \n    \n    \n    \n        // Add the brushing\n        line\n          .append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush);\n    \n        // A function that set idleTimeOut to null\n        var idleTimeout\n        function idled() { idleTimeout = null; }\n    \n        // A function that update the chart for given boundaries\n        function updateChart() {\n    \n          // What are the selected boundaries?\n          var extent = d3.event.selection\n    \n          // If no selection, back to initial coordinate. Otherwise, update X axis domain\n          if(!extent){\n            if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n            x.domain([ 4,8])\n          }else{\n            x.domain([ x.invert(extent[0]), x.invert(extent[1]) ])\n            line.select(\".brush\").call(brush.move, null) // This remove the grey brush area as soon as the selection has been done\n          }\n    \n          // Update axis and line position\n          xAxis.transition().duration(1000).call(d3.axisBottom(x))\n          line\n              .select('.line')\n              .transition()\n              .duration(1000)\n              .attr(\"d\", d3.line()\n                .x(function(d) { return x(d.date) })\n                .y(function(d) { return y(d.value) })\n              )\n        }\n    \n        // If user double click, reinitialize the chart\n        svg.on(\"dblclick\",function(){\n          x.domain(d3.extent(data, function(d) { return d.date; }))\n          xAxis.transition().call(d3.axisBottom(x))\n          line\n            .select('.line')\n            .transition()\n            .attr(\"d\", d3.line()\n              .x(function(d) { return x(d.date) })\n              .y(function(d) { return y(d.value) })\n          )\n        });\n    \n    // })\n    \n\n    }\n\n    const d3Container = useRef(null);\n\n    return (\n        <div\n            className=\"d3-lollipop-chart\"\n            width={996}\n            height={444}\n            ref={d3Container}\n        ></div>\n    );\n}\n\nexport default LollipopChart;"]},"metadata":{},"sourceType":"module"}